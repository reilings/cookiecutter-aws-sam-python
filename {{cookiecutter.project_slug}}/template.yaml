AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  {{ cookiecutter.project_name }}
  
  {{ cookiecutter.project_short_description }}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
{%- if cookiecutter.include_safe_deployment == "y" %}
    AutoPublishAlias: live # More info about Safe Deployments: https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst
    DeploymentPreference:
      Type: Linear10PercentEvery1Minute {% endif %}

Resources:
  {{ cookiecutter.lambda_function_name }}LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: {{ cookiecutter.lambda_function_name }}LambdaRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  {{ cookiecutter.lambda_function_name }}:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: {{ cookiecutter.project_short_description }}
      FunctionName: {{ cookiecutter.lambda_function_name }}
      CodeUri: build/
      Handler: {{ cookiecutter.project_module_slug }}.app.handler
      Role: !GetAtt {{ cookiecutter.lambda_function_name }}LambdaRole.Arn
      Runtime: python3.6
      Timeout: 30
{%- if cookiecutter.include_apigw == "y" %}
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /first/{proxy+}
            Method: any {% endif %}
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

Outputs:
{% if cookiecutter.include_apigw == "y"%}
  FirstApigwURL:
    Description: "API Gateway endpoint URL for Prod environment for {{ cookiecutter.lambda_function_name }}"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/first/proxy"
{%- endif %}

  {{ cookiecutter.lambda_function_name }}:
    Description: "{{ cookiecutter.project_short_description }}"
    Value: !GetAtt {{ cookiecutter.lambda_function_name }}.Arn

